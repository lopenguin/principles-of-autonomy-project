'''
helpers.py

Contains helper functions.
'''
import os
import sys
import numpy as np

sys.path.extend(os.path.abspath(os.path.join(os.getcwd(), d)) for d in ['ss-pybullet'])

from pybullet_tools.utils import set_pose, Pose, Point, Euler, stable_z_on_aabb
from pybullet_tools.utils import CIRCULAR_LIMITS, get_custom_limits, interval_generator

from src.world import World
from src.utils import COUNTERS, compute_surface_aabb, name_from_type

UNIT_POSE2D = (0., 0., 0.)

def add_ycb(world, ycb_type, idx=0, counter=0, **kwargs):
    '''
    Adds YCB-type object to a pybullet world.
    Used for sugar and spam boxes.
    '''
    name = name_from_type(ycb_type, idx)
    world.add_body(name, color=np.ones(4))
    pose2d_on_surface(world, name, COUNTERS[counter], **kwargs)
    return name

def pose2d_on_surface(world, entity_name, surface_name, pose2d=UNIT_POSE2D):
    '''
    Put a YCB object onto a surface
    '''
    x, y, yaw = pose2d
    body = world.get_body(entity_name)
    surface_aabb = compute_surface_aabb(world, surface_name)
    z = stable_z_on_aabb(body, surface_aabb)
    pose = Pose(Point(x, y, z), Euler(yaw=yaw))
    set_pose(body, pose)
    return pose

# Lambdas to add objects to the world
add_sugar_box = lambda world, **kwargs: add_ycb(world, 'sugar_box', **kwargs)
add_spam_box = lambda world, **kwargs: add_ycb(world, 'potted_meat_can', **kwargs) 

def get_sample_fn(body, joints, custom_limits={}, **kwargs):
    '''
    Autogenerates random joint angles within joint limits of arm
    '''
    lower_limits, upper_limits = get_custom_limits(body, joints, custom_limits, circular_limits=CIRCULAR_LIMITS)
    generator = interval_generator(lower_limits, upper_limits, **kwargs)
    def fn():
        return tuple(next(generator))
    return fn

def normalize_angle(angle):
    # ensures all joint angles are between [-pi pi]
    return (angle + np.pi) % (2 * np.pi) - np.pi 


'''
RRT Helper Functions
'''
def joint_space_distance(joint_angles_a, joint_angles_b):
    '''
    Computes distance between joint angles in joint space (l2 norm)
    '''
    joint_diffs = [normalize_angle(a - b) for a, b in zip(joint_angles_a, joint_angles_b)] #subtracts joint angles after normalizing to find distance between poses
    squared_diffs = [diff**2 for diff in joint_diffs] # squared difference beetween them
    return np.sqrt(sum(squared_diffs)) #total value of squared differences (i.e.  sum of squares for error)

def find_x_nearest(Vertices,x_rand):
    '''
    Tests list of x values against x_rand to find which is closest
    to x_rand
    '''
    for j in range(len(Vertices)):
        if j == 0:
            dist_min = joint_space_distance(Vertices[j],x_rand)
            node_min = Vertices[j]
        else:
            dist = joint_space_distance(Vertices[j],x_rand)
            if dist < dist_min:
                dist_min = dist
                node_min = Vertices[j]
                
    return node_min, dist_min

def find_x_new(x_nearest,x_rand,max_step,lower_limits,upper_limits):
    dist = joint_space_distance(x_nearest,x_rand)
    if dist <= max_step: # no need for unit vector math if dist is already within tolerance
        return x_rand
      
    unit_vector = [(x_rand_i - x_nearest_i) / dist for x_rand_i, x_nearest_i in zip(x_rand, x_nearest)]
    x_new = [x_nearest_i + max_step * unit_i for x_nearest_i, unit_i in zip(x_nearest, unit_vector)]
    
    x_new_bounded = []
    for i, angle in enumerate(x_new):
        temp_angle = min(angle,upper_limits[i])
        bounded_angle = max(temp_angle,lower_limits[i])
        x_new_bounded.append(bounded_angle)
        
    return x_new_bounded

def is_node_within_goal_region(node, goal_region):
    return all(lower <= angle <= upper for angle, (lower, upper) in zip(node, goal_region))

def find_rrt_path(start_pose,x_new,Edges):
    rrt_path = [x_new]
    current_node = x_new
    while current_node != start_pose:
        current_node = Edges[current_node]
        rrt_path.append(current_node)
    return rrt_path

# Hard coded opening trajectory in joint space
OPENING_TRAJ = ([1.1178574403159747, -1.724930993309394, -1.9050806285604385, -1.7852890170289148, 0.7736997489053827, 2.8038560343365693, 2.896826686500735],
[1.1013069163417306, -1.6927338576258006, -1.9253286493895838, -1.8017585866233166, 0.8187442043740294, 2.7805411689345583, 2.8703762628140157],
[1.0825677148350366, -1.6675628053633924, -1.9418936427624798, -1.8194137801909198, 0.8465616635568587, 2.7612855455263183, 2.854467842488122],
[1.0476872809641424, -1.6798255005615588, -1.9395258381907408, -1.8451266623858578, 0.8003244941502503, 2.7685496829351193, 2.880938136152729],
[1.0340769105164718, -1.644983714762732, -1.9600910202942143, -1.8591769314042192, 0.8443821801123903, 2.741603222422441, 2.855955109437254],
[1.0137528536923393, -1.6262824651797032, -1.9726102241631058, -1.8763549542898232, 0.8555107436279634, 2.7257101739020397, 2.850096455134897],
[0.9953978807859496, -1.6044584588996929, -1.9865130724088753, -1.8922144621671624, 0.8709147270402129, 2.70699981111533, 2.8420586188562056],
[0.9736291416936602, -1.590494567957466, -1.9962784204975852, -1.9090988411941936, 0.8710849764353039, 2.693805299355199, 2.8426200915523787],
[0.9539208291759573, -1.5731462285576914, -2.0075996664498312, -1.9245838597650362, 0.8762954533160361, 2.677632657315823, 2.8405060833742692],
[0.9325675471853998, -1.5597137688277551, -2.016813161219989, -1.9401834556245312, 0.8738917817875791, 2.664076762007425, 2.842680786156151],
[0.9092671070566611, -1.5505322020144705, -2.0238021947233706, -1.9559241811829589, 0.8635930602954236, 2.6534162684739195, 2.849303903256867],
[0.8753469536925547, -1.5616408166113152, -2.021161363639747, -1.975039332784247, 0.8177527578929897, 2.6576236573063623, 2.876190740381722],
[0.8558778051889959, -1.5459569948900955, -2.0311335116626053, -1.9879421769052437, 0.8179434944365207, 2.6412734948567476, 2.8770539019907573],
[0.834561955518911, -1.5343214848406954, -2.039157062415979, -2.000931265267594, 0.8106173597202337, 2.627527371345965, 2.882252790446532],
[0.8190043391071935, -1.5130401533059876, -2.0515587347632236, -2.0112846348659286, 0.8192391135386767, 2.606181655015346, 2.8782842097955945],
[0.800471091984285, -1.4978656613057586, -2.061091195796666, -2.0221110776843956, 0.8169974056795901, 2.5889795651732768, 2.8805399327734125],
[0.7864890285418618, -1.4757438591583913, -2.0739471883257563, -2.0308840029758635, 0.8257366381270757, 2.5660812384271434, 2.8765033156240825],
[0.7750981354743125, -1.4504728085061345, -2.0885424814907108, -2.0383719264343796, 0.8388234099283087, 2.54023255728369, 2.8700216962225835],
[0.7624407204030765, -1.428460283221777, -2.1017247897520965, -2.045746996987889, 0.8460720083589619, 2.516380598866864, 2.86683643868601],
[0.744179011538562, -1.4161376427548118, -2.1099193835758343, -2.0540997888181964, 0.8379555248900203, 2.4997204335217713, 2.872207132672006],
[0.746072676400857, -1.374542952854584, -2.134534922215985, -2.0565831897173785, 0.8740226997461154, 2.459069529072131, 2.8529902843463315],
[0.7289187041871124, -1.362462900440027, -2.1428681880364158, -2.0634284037756094, 0.8652619990064743, 2.4417991012206044, 2.85848768303171],
[0.7037604001228486, -1.3623545348955215, -2.1442616446160607, -2.0714942609691125, 0.838829821456951, 2.4338361454834763, 2.873754946742529],
[0.7006075758518016, -1.3321288702677792, -2.1636253321515153, -2.073660987172021, 0.8569901703798619, 2.4008811272635824, 2.8641805779462772],
[0.6867622003601195, -1.3178102249868793, -2.173785807519651, -2.077702630504988, 0.8517574545512634, 2.380463596594625, 2.8675038642892265],
[0.6572073872343447, -1.325010413724727, -2.170642756709622, -2.0844682798516496, 0.815453357208276, 2.3771996809668607, 2.888190817905096],
[0.6411070811634296, -1.3148528637987895, -2.1783367981547115, -2.087517705452533, 0.8047349994491917, 2.3592813019632577, 2.894521125172868],
[0.6499162085524324, -1.2740676130083026, -2.206344915060994, -2.0847541472459756, 0.8383646308231434, 2.315859584300086, 2.875650064651867],
[0.6440193589723666, -1.2536911800361472, -2.222012550585813, -2.084512425450508, 0.8426099590838882, 2.2884886763723054, 2.87331301491759],
[0.624876607655656, -1.249942352372666, -2.2261200287404024, -2.0860897768574977, 0.8237609326341104, 2.2747350298670304, 2.8838076674613773],
[0.6108557398957775, -1.2408811105330781, -2.2342699407330207, -2.085964847766605, 0.8128326480682402, 2.2560068429844358, 2.8898273321656816],
)

VERT_TRAJ = ([0.6095112016986359, -1.2424276531537433, -2.2331300619029366, -2.0862110964120193, 0.8106526939885983, 2.257302112934267, 2.8910676012596315],
[0.6162733086572612, -1.202190875869703, -2.2334293629635216, -2.0999361804459262, 0.8476972228268718, 2.2414174904872084, 2.882850949937047],
[0.6044021325830142, -1.1829754630800595, -2.217494630072041, -2.1163115444592897, 0.8555864964786206, 2.242914508327466, 2.8914454362410553],
[0.5971439525546778, -1.1582180996227156, -2.2054179123627446, -2.131167807687408, 0.8709746929088791, 2.2391229771698447, 2.8962087496612967],
[0.6124769797680631, -1.1067873222457854, -2.213966300198354, -2.141462719720624, 0.9197728504985925, 2.2112827982238468, 2.8830020525657676],
[0.5995002949142014, -1.0876304336847784, -2.1966068737208397, -2.155909416480772, 0.9273181119864775, 2.2114425736870147, 2.892861789228674],
[0.6186374944498585, -1.0314550289155533, -2.2098602072985933, -2.1645742556017513, 0.9786584978339468, 2.177392694931445, 2.8797971434618836],
[0.6174345656206164, -0.997970514409326, -2.2040621773594027, -2.1758881168177, 1.0019045490490797, 2.1633810032488365, 2.8822844585328347],
[0.6806195695825528, -0.9001558299137266, -2.2638105562886954, -2.1787603896358485, 1.0941117332153603, 2.0850298617109377, 2.8520533686615646],
[0.659486347553127, -0.8850331012540553, -2.238750763181676, -2.1913705775209795, 1.0948719142140737, 2.0884367658029186, 2.866616528297324],
[0.6466651312431164, -0.8619448442241379, -2.2221666231991923, -2.20238866508495, 1.1042733667904816, 2.083137284290379, 2.8775682190551044],
[0.642503396157708, -0.8301750018881381, -2.2147134676323903, -2.2118204023224743, 1.1223487805942307, 2.0686214324052443, 2.884966627022927],
[0.7075336063173516, -0.7396714910475555, -2.2813292728699697, -2.214834445469177, 1.1965150374887097, 1.9918824469970753, 2.869342414866264],
[0.7536607001258746, -0.6734711888067737, -2.329018701195844, -2.2202987456715, 1.2450378788464747, 1.9375755370992311, 2.8670773947423887],
[0.8958184745291966, -0.5681908408038773, -2.4801776847958665, -2.2225802720175682, 1.3321884962018853, 1.8284236071012792, 2.8556365635978085],
[0.8291922984902262, -0.5667340947435512, -2.4082372348399423, -2.232598959757193, 1.315089075178566, 1.852765488093374, 2.877089056801316],
[0.16993542438194265, -1.70558947524499, -1.8006459410644748, -2.349301328625925, -0.16052788846353394, 2.540197515991368, -2.473767000676442],
[0.1683266255735809, -1.69674443968993, -1.7824286132950857, -2.3571908968128765, -0.15310990146251902, 2.54341077600807, -2.4599007242737123],
[0.16956125184820525, -1.6737909510365492, -1.7633786853538294, -2.365027440318825, -0.12040634122865601, 2.5481875494387065, -2.463854231852526],
[0.16854454465092328, -1.6623383895836896, -1.7444543688467171, -2.371633001679028, -0.10757186521201678, 2.551080006115981, -2.4535921834732455],
[0.1668140301455061, -1.6563850313128816, -1.7255276991575956, -2.3773593480537882, -0.10414042469033591, 2.5531413945656793, -2.436526699472854],
[0.16508335215928405, -1.6528385609252545, -1.706519182088756, -2.3823310082695914, -0.10467631628456475, 2.554746327461969, -2.416526066431476],
[0.1627129041644455, -1.658834807935434, -1.6878214862130312, -2.3862724400937765, -0.12182434840458001, 2.5551052707770916, -2.384596206264811],
[0.1632984967143276, -1.640449157711316, -1.6677409427805163, -2.3904259252402853, -0.09560149192602863, 2.5578243944418806, -2.383471148785135],
[0.16230031876255602, -1.6420034064033648, -1.648552001697583, -2.393199109278205, -0.10449455904114391, 2.558300954730762, -2.35726065202789],
[0.1627516626113792, -1.6267070931209309, -1.6283464811443127, -2.3958250185878183, -0.08335601850352958, 2.5600995300272587, -2.352404743392963],
[0.1628708147869924, -1.6198732217671576, -1.608506272862332, -2.3974885141505893, -0.07710624832267765, 2.560876555737565, -2.3368966832944547],
[0.16368415856458274, -1.5813345615481413, -1.5867900549945548, -2.3989085512832347, -0.014239179945364722, 2.562698774156677, -2.361772678489814],
[0.16373736033304276, -1.5803155673332747, -1.5671893152712988, -2.3990935999340803, -0.01824261355568657, 2.56272754856907, -2.338916271118055],
[0.16447686640310089, -1.5870653372293158, -1.5480280669096709, -2.398512982174834, -0.03612649512446664, 2.562309989169492, -2.3061567250044646],
[0.16493954728844606, -1.569874435617392, -1.5275262172988178, -2.397447354627808, -0.011313468589644327, 2.5622447545477005, -2.3038924303002974],
[0.1648660871057892, -1.5462180780850072, -1.5067314393323306, -2.395539362819701, 0.024972155482481995, 2.561510344925269, -2.3098478717934365],
[0.16443397977808338, -1.5226699370805468, -1.4860670469219521, -2.392704749347125, 0.06088782590694919, 2.559859318200804, -2.315574008486722],
[0.16495857762647326, -1.5124417230111284, -1.466275338473444, -2.389325200997091, 0.07284979384694523, 2.5583801991614767, -2.304266024431463],
[0.1656059975621771, -1.5020921981867472, -1.4466336567460742, -2.3852370786532675, 0.08480702245287475, 2.5565975807757853, -2.293025459482584],
[0.16907119845988916, -1.5111235450719083, -1.428097998375837, -2.380956988157243, 0.06202589781593826, 2.5559964476121193, -2.2571274009762976],
[0.16942267503488573, -1.4948231358283206, -1.4085267002359714, -2.375386140678157, 0.08406552796660094, 2.5533978913704463, -2.253260659998158],
[0.17502940236447984, -1.5085978460505511, -1.390451719327746, -2.3698458023283324, 0.052193850704632894, 2.552611223763698, -2.2111370294453403],
[0.1757263831532505, -1.4920207107577677, -1.3713294962295794, -2.3629685638437214, 0.07409734961000147, 2.5496713239692523, -2.20741561295142],
[0.17895520343233962, -1.4875410871592483, -1.3529180402839458, -2.355680259718072, 0.0740360995148901, 2.5472474054266363, -2.1882097987251137],
[0.17813194008660815, -1.4641910824626478, -1.3342128087530216, -2.3471635148639245, 0.10716067725686784, 2.5429469730640464, -2.1927089458221447],
[0.18211896852635334, -1.4611040497369423, -1.316416729897074, -2.338608398564685, 0.10380037374792117, 2.540234836490197, -2.171468004116877],
[0.18274716860128493, -1.4440382797705547, -1.298615229150062, -2.328878019296782, 0.1248000420528772, 2.5357670038575, -2.1676467786154974],
[0.18730724479437555, -1.4407500474378594, -1.2814117954954365, -2.3190260873372046, 0.12087839177724113, 2.532636777186215, -2.146361991432419],
[0.18828805638031554, -1.4244349482884164, -1.2643882555419954, -2.307975785273574, 0.13954289390704133, 2.52764622685471, -2.141209991446861],
[0.19804023471086296, -1.4349267532033405, -1.2478317792941391, -2.2974082827545645, 0.11014769033115979, 2.5257883467675386, -2.1023655766474945]
)

TWIST_TRAJ = ([0.20539077783786563, -1.4571834007192808, -1.247779685040955, -2.298078320219319, 0.07038276208032457, 2.5277766908029, -2.0743243786982393],
[0.10810552183227085, -1.1843759014880262, -1.2396345375127404, -2.331808245769112, 0.10946066899213136, 2.648874363519599, -1.8428829445029034],
[-0.01317930391455846, -0.8930574191123479, -1.196229019275787, -2.3365484911501064, 0.14526669029582706, 2.668198304420641, -1.5898572309082764],
[-0.17873014434445, -0.6313702043285202, -1.0987059683219833, -2.3142873818690273, 0.13002197333287135, 2.5847743949069453, -1.3086108793231612],
[-0.44431298502652883, -0.4085191216750912, -0.8912424555522622, -2.262017075683973, 0.11055164666387363, 2.41150921858625, -1.056485518026287],
[-0.6378960868437185, -0.29805032678561655, -0.7181483232344799, -2.17919830590217, -0.02290106823694371, 2.1771785779009587, -0.7624195998597729],
[-0.7707146663874513, -0.2017939843798045, -0.5861578916324008, -2.0647980916708066, -0.1171878524248875, 1.8939135245415408, -0.5247017037992889]
)


COLLISIONS_LIST = [\
    {'sign': [1, 1, 1], # +1 if we should be < val; -1 if arm should be > val
     'val': [10.,1.,0.] # x, y, z coords of val
    },
    {'sign': [1, 1, 1],
     'val': [10.,1.,0.]
    },
    {'sign': [1, 1, 1],
     'val': [10.,1.,0.]
    }
    # ...
    ]